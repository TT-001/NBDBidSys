// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBD_TractionFive.Data;

namespace NBD_TractionFive.Data.NBDMigrations
{
    [DbContext(typeof(NBDContext))]
    partial class NBDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13");

            modelBuilder.Entity("NBD_TractionFive.Models.Bid", b =>
                {
                    b.Property<int>("bidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BidState")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DesignerID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("SalesID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("bidAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("bidDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("employeeempID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("projID")
                        .HasColumnType("INTEGER");

                    b.HasKey("bidID");

                    b.HasIndex("DesignerID");

                    b.HasIndex("SalesID");

                    b.HasIndex("employeeempID");

                    b.HasIndex("projID");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.BidLabour", b =>
                {
                    b.Property<int>("bidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("labID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("blCost")
                        .HasColumnType("REAL");

                    b.Property<double>("blHours")
                        .HasColumnType("REAL");

                    b.HasKey("bidID", "labID");

                    b.HasIndex("labID");

                    b.ToTable("BidLabours");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.BidMaterial", b =>
                {
                    b.Property<int>("bidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("invID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("bmCost")
                        .HasColumnType("REAL");

                    b.Property<int>("bmQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("bidID", "invID");

                    b.HasIndex("invID");

                    b.ToTable("BidMaterials");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Client", b =>
                {
                    b.Property<int>("cliID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Province")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("cliCity")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("cliContactName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("cliName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<long>("cliPhonenumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("clicontactType")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("cliID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Employee", b =>
                {
                    b.Property<int>("empID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("empFirst")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("empLast")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<long>("empPhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("empType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("empID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.InvType", b =>
                {
                    b.Property<int>("itID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("itType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("itID");

                    b.ToTable("InvTypes");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Inventory", b =>
                {
                    b.Property<int>("invID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("invName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<double>("invPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("invSize")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int?>("itID")
                        .HasColumnType("INTEGER");

                    b.HasKey("invID");

                    b.HasIndex("itID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Labour", b =>
                {
                    b.Property<int>("labID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("labDescription")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<double>("labPrice")
                        .HasColumnType("REAL");

                    b.HasKey("labID");

                    b.ToTable("Labours");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Project", b =>
                {
                    b.Property<int>("projID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Province")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<int?>("cliID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("projBeginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("projCity")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("projCompletionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("projSite")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.HasKey("projID");

                    b.HasIndex("cliID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.inventoryVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<int>("quantityOnHands")
                        .HasColumnType("INTEGER");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("inventoryVMs");
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Bid", b =>
                {
                    b.HasOne("NBD_TractionFive.Models.Employee", "Designer")
                        .WithMany("DesignerBids")
                        .HasForeignKey("DesignerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBD_TractionFive.Models.Employee", "SalesAssociate")
                        .WithMany("SalesBids")
                        .HasForeignKey("SalesID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBD_TractionFive.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeempID");

                    b.HasOne("NBD_TractionFive.Models.Project", "Project")
                        .WithMany("Bids")
                        .HasForeignKey("projID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NBD_TractionFive.Models.BidLabour", b =>
                {
                    b.HasOne("NBD_TractionFive.Models.Bid", "Bid")
                        .WithMany("BidLabours")
                        .HasForeignKey("bidID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBD_TractionFive.Models.Labour", "Labour")
                        .WithMany("BidLabours")
                        .HasForeignKey("labID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NBD_TractionFive.Models.BidMaterial", b =>
                {
                    b.HasOne("NBD_TractionFive.Models.Bid", "Bid")
                        .WithMany("BidMaterials")
                        .HasForeignKey("bidID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBD_TractionFive.Models.Inventory", "Inventory")
                        .WithMany("BidMaterials")
                        .HasForeignKey("invID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Inventory", b =>
                {
                    b.HasOne("NBD_TractionFive.Models.InvType", "InvType")
                        .WithMany("Inventories")
                        .HasForeignKey("itID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NBD_TractionFive.Models.Project", b =>
                {
                    b.HasOne("NBD_TractionFive.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("cliID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
